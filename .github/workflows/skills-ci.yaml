name: Skills CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'skills/**'
      - 'tests/**'
      - 'tooling/**'
      - '.github/workflows/skills-ci.yaml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'skills/**'
      - 'tests/**'
      - 'tooling/**'
      - '.github/workflows/skills-ci.yaml'

jobs:
  skills-pipeline:
    name: Validate, Lint, Index, and Test Skills
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Validate skills
        id: validate
        run: |
          echo "::group::Validating SKILL.md files"
          python tooling/validate_skill.py --root .
          echo "::endgroup::"

      - name: Lint skills
        id: lint
        if: success() || failure()
        run: |
          echo "::group::Linting SKILL.md files"
          python tooling/lint_skill.py --root .
          echo "::endgroup::"

      - name: Build index
        id: build_index
        if: success() || failure()
        run: |
          echo "::group::Building skills index"
          python tooling/build_index.py --root .
          echo "::endgroup::"

      - name: Verify index
        if: success()
        run: |
          if [ ! -f index/skills-index.json ]; then
            echo "ERROR: index/skills-index.json not generated"
            exit 1
          fi
          echo "Index generated successfully:"
          cat index/skills-index.json

      - name: Run evaluations
        id: evals
        if: success() || failure()
        run: |
          echo "::group::Running skill evaluations"
          eval_files=$(find tests -name 'evals_*.yaml' 2>/dev/null || true)

          if [ -z "$eval_files" ]; then
            echo "No evaluation files found - skipping"
            exit 0
          fi

          echo "Found evaluation files:"
          echo "$eval_files"

          # Basic YAML syntax check for now
          for eval_file in $eval_files; do
            echo "Checking $eval_file..."
            python -c "import yaml; yaml.safe_load(open('$eval_file'))"
            if [ $? -eq 0 ]; then
              echo "  ✓ $eval_file is valid YAML"
            else
              echo "  ✗ $eval_file has YAML syntax errors"
              exit 1
            fi
          done
          echo "::endgroup::"

      - name: Upload index artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: skills-index
          path: index/skills-index.json
          retention-days: 30

      - name: Post summary
        if: always()
        run: |
          echo "# Skills CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.validate.outcome }}" == "success" ]; then
            echo "✅ **Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.lint.outcome }}" == "success" ]; then
            echo "✅ **Lint**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Lint**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.build_index.outcome }}" == "success" ]; then
            echo "✅ **Index**: Built successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Index**: Build failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ steps.evals.outcome }}" == "success" ]; then
            echo "✅ **Evaluations**: Passed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.evals.outcome }}" == "skipped" ]; then
            echo "⏭️ **Evaluations**: Skipped (no eval files)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Evaluations**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f index/skills-index.json ]; then
            skill_count=$(python -c "import json; print(len(json.load(open('index/skills-index.json'))))" 2>/dev/null || echo "0")
            echo "📊 **Total Skills**: $skill_count" >> $GITHUB_STEP_SUMMARY
          fi
